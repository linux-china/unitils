###########################################################################
# This file defines the Unitils configuration for Unitils' own unit tests #
###########################################################################

unitils.modules= database,spring,inject,mock,easymock,dbunit,profile,io,hibernate,jpa

unitils.module.expectedXmlDataset.className = org.unitils.dbunit.expectedxmldataset.ExpectedXmlDatasetModule
unitils.module.expectedXmlDataset.runAfter = 
unitils.module.expectedXmlDataset.enabled =true

unitils.module.profile.className = org.unitils.spring.profile.ProfileModule
unitils.module.profile.runAfter = 
unitils.module.profile.enabled =true

unitils.module.io.className = org.unitils.io.IOModule
unitils.module.io.runAfter = 
unitils.module.io.enabled =true

unitils.module.spring.className = org.unitils.spring.SpringModule
unitils.module.spring.runAfter = 
unitils.module.spring.enabled =true

unitils.module.mock.className = org.unitils.mock.MockModule
unitils.module.mock.runAfter = 
unitils.module.mock.enabled =true

unitils.module.easymock.className = org.unitils.easymock.EasyMockModule
unitils.module.easymock.runAfter = 
unitils.module.easymock.enabled =true

# Name or path of the user specific properties file. This file should contain the necessary parameters to connect to the
# developer's own unit test schema. It is recommended to override the name of this file in the project specific properties
# file, to include the name of the project. The system will try to find this file in the classpath, the user home folder
# (recommended) or the local filesystem.
unitils.configuration.localFileName=unitils-local.properties
#unitils.configuration.localFileName=unitils-local-oracleXE.properties
#unitils.configuration.localFileName=unitils-local-db2.properties
#unitils.configuration.localFileName=unitils-local-derby.properties
#unitils.configuration.localFileName=unitils-local-mysql.properties
#unitils.configuration.localFileName=unitils-local-mssql.properties
#unitils.configuration.localFileName=unitils-local-postgresql.properties

# Properties for the PropertiesDataSourceFactory
database.driverClassName=org.hsqldb.jdbcDriver
database.url=jdbc:hsqldb:mem:unitils
database.userName=sa
database.password=

# Default behavior concerning execution of tests in a transaction. Supported values are 'disabled', 'commit' and 'rollback'.
# If set to disabled, test are not executed in a transaction by default. If set to commit, each test is run in a transaction,
# which is committed. If set to rollback, each test is run in a transaction, which is rolled back.
DatabaseModule.Transactional.value.default=disabled

# This property specifies the underlying DBMS implementation. Supported values are 'oracle', 'db2', 'mysql', 'hsqldb' and 'postgresql'.
# The value of this property defines which vendor specific implementations of DbSupport and ConstraintsDisabler are chosen.
database.dialect=hsqldb

# A comma-separated list of all used database schemas. The first schema name is the default one, if no schema name is
# specified in for example a dbunit data set, this default one is used.
# A schema name is case sensitive if it's surrounded by database identifier quotes (eg " for oracle)
database.schemaNames=public

# Type of transaction manager that should be created:
# simple: a simple transaction manager that wraps the datasource to control transactions
# spring: a transaction manager that delegates actions to the transaction manager that is configured in the current spring context
# auto: this will first try to load the spring transaction manager. if spring is not available, it will load the simple transaction manager
transactionManager.type=auto

# If set to true, the DBMaintainer will be used to update the unit test database schema. This is done once for each
# test run, when creating the DataSource that provides access to the unit test database.
updateDataBaseSchema.enabled=true

# Comma separated list of directories and files in which the database update scripts are located. Directories in this
# list are recursively searched for files.
dbMaintainer.script.locations=

# If set to true, an implementation of org.unitils.dbmaintainer.constraints.ConstraintsDisabler will be used to disable
# the foreign key and not null constraints of the unit test database schema.
# The ConstraintsDisabler is configured using the properties specified below. The property with key 'database.dialect'
# specifies which implementation is used.
dbMaintainer.disableConstraints.enabled=true

# If set to true, an implementation of org.unitils.dbmaintainer.sequences.SequenceUpdater will be used to update the
# sequences to a suffiently high value, so that test data can be inserted without problems.
# The SequenceUpdater is configured using the properties specified below. The property with key 'database.dialect'
# specifies which implementation is used.
dbMaintainer.updateSequences.enabled=true

dataSetStructureGenerator.xsd.dirName=dbscripts/xsd

# If set to true an XSD or DTD will be generated that represents the structure of the database schema. This XSD or DTD can be
# used in datafiles to verify if they are up-to-date and to enable code completion.
dbMaintainer.generateDataSetStructure.enabled=false

# Set to true if the db version table should be created automatically if it does not exist yet.
# If false, an exception is thrown the it does not exist yet, showing how to create the version table manually.
# This is set to false by default to be sure that no non-unit test schema is dropped by accident. If a
# version table is available, we assume it to be a unit-test schema, if not, you should manually add a version table
# to indicate that it is a unit-test schema.
dbMaintainer.dbVersionSource.autoCreateVersionTable=true

dbMaintainer.autoCreateExecutedScriptsTable = true

# Lowest acceptable value of a sequence in a unit test database. The SequenceUpdater will make sure all sequences
# have this value or higher before proceeding
sequenceUpdater.sequencevalue.lowestacceptable=1000

org.unitils.dbmaintainer.locator.resourcepickingstrategie.ResourcePickingStrategie.implClassName = org.unitils.dbmaintainer.locator.resourcepickingstrategie.impl.UniqueMostRecentPickingStrategie